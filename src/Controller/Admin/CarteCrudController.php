<?php

namespace App\Controller\Admin;

use App\Entity\Carte;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\EntityRepository;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\AssociationField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IdField;
use EasyCorp\Bundle\EasyAdminBundle\Field\ImageField;
use EasyCorp\Bundle\EasyAdminBundle\Field\NumberField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;

class CarteCrudController extends AbstractCrudController
{
    public static function getEntityFqcn(): string
    {
        return Carte::class;
    }

    public function updateEntity(EntityManagerInterface $entityManager, $entityInstance): void
    {
        parent::updateEntity($entityManager, $entityInstance); // TODO: Change the autogenerated stub
    }

    public function persistEntity(EntityManagerInterface $entityManager, $entityInstance): void
    {
        dump('ALAID');
        die();
        if ($name = $this->getContext()->getRequest()->get('Carte')['nom']) {
            $entityInstance->setNom($name);
        }
        if ($type = $this->getContext()->getRequest()->get('Carte')['type']) {
            $entityInstance->setType($type);
        }
        if ($cru = $this->getContext()->getRequest()->get('Carte')['cru']) {
            $entityInstance->setCru($cru);
        }
        if ($region = $this->getContext()->getRequest()->get('Carte')['region']) {
            $entityInstance->setCru($region);
        }
        if ($latitude = $this->getContext()->getRequest()->get('Carte')['latitude']) {
            $entityInstance->setCru($latitude);
        }
        if ($superficie = $this->getContext()->getRequest()->get('Carte')['superficie']) {
            $entityInstance->setCru($superficie);
        }
        if ($contenuImage = $this->getContext()->getRequest()) {
            if ('image/jpeg' == $contenuImage->files->get('Carte')['contenuImage']['file']->getClientMimeType()
                || 'image/png' == $contenuImage->files->get('Carte')['contenuImage']['file']->getClientMimeType()) {
                dump($contenuImage);

                $entityInstance->setContenueImage($contenuImage);
            }
        }

        parent::persistEntity($entityManager, $entityInstance); // TODO: Change the autogenerated stub
    }

    public function configureFields(string $pageName): iterable
    {
        return [
            IdField::new('id')->hideOnForm(),
            TextField::new('nom'),
            TextField::new('type'),
            TextField::new('cru'),
            TextField::new('region'),
            NumberField::new('latitude'),
            NumberField::new('longitude'),
            NumberField::new('superficie'),
            AssociationField::new('vignerons')->setFormTypeOption('choice_label', function ($vigneron) {
                return $vigneron->getNomPrenom();
            })
                ->setFormTypeOption('query_builder', function (EntityRepository $ep) {
                    return $ep->createQueryBuilder('c')->orderBy('c.nom', 'ASC');
                })
                ->formatValue(function ($value, $entity) {
                    return $entity->getVignerons()->getNom().' '.$entity->getVignerons()->getPrenom();
                }),
            ImageField::new('contenuImage', 'Image de la carte')
                ->setBasePath('uploads/image/')
                ->setUploadDir('public/uploads/img/cartes/')
            ->setUploadedFileNamePattern('cards-[slug]-[timestamp].[extension]')

                ->onlyOnForms(),
        ];
    }
}
